# 数据库配置
spring:
  shardingsphere:
    datasource:
      # 配置所有用到的数据库，对于不参与分库分表的表，使用的是这里设置的第一个库，即default。
      names: default, mysql01, mysql02
      default:
        driver-class-name: com.mysql.cj.jdbc.Driver
#                type: com.zaxxer.hikari.HikariDataSource
#                jdbc-url: "jdbc:mysql://192.168.15.104:3306/station01?useUnicode=true&useSSL=false"
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.15.104:3306/test?useUnicode=true&useSSL=false
        username: root
        password: root
      mysql01:
        driver-class-name: com.mysql.cj.jdbc.Driver
#           type: com.zaxxer.hikari.HikariDataSource
#                jdbc-url: "jdbc:mysql://192.168.15.104:3306/station02?useUnicode=true&useSSL=false"
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.15.104:3306/station01?useUnicode=true&useSSL=false
        username: root
        password: root
      mysql02:
        driver-class-name: com.mysql.cj.jdbc.Driver
#                type: com.zaxxer.hikari.HikariDataSource
#        jdbc-url: "jdbc:mysql://192.168.15.104:3306/station01?useUnicode=true&useSSL=false"
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.15.104:3306/station02?useUnicode=true&useSSL=false
        username: root
        password: root

    # 分库分表规则配置
    rules:
      sharding:
        default-database-strategy:
          standard:
            # 分库字段
            sharding-column: type
            # 分库规则
            sharding-algorithm-name: custom-database-sharding
        tables:
          t_side_monitor_data:
            # 所有库的分表
            actual-data-nodes: mysql01.t_side_monitor_data_${01..12}, mysql02.t_side_monitor_data_${01..12}
            table-strategy:
              standard:
                # 分表字段
                sharding-column: collect_time
                # 分表规则
                sharding-algorithm-name: t-side-monitor-data-rule

            key-generate-strategy:
              column: id
              # 分表id生成策略
              key-generator-name: snowflake
        sharding-algorithms:
          # 分库规则
          custom-database-sharding:
            type: DATABASE-CUSTOM
            props:
              algorithm-class-name: com.mrlu.sharding.route.CustomDatabaseShardingAlgorithm

          # 分库规则
          t-side-monitor-data-rule:
#            分表算法-方式一
#           type: INLINE
#            props:
#              algorithm-expression: t_side_monitor_data_${collect_time.month + 1}
#              allow-range-query-with-inline-sharding: true

#           分表算法-方式二：自定义
            type: TABLE-CUSTOM
            props:
#              algorithm-expression: t_side_monitor_data_${collect_time.month + 1}
              algorithm-class-name: com.mrlu.sharding.route.CustomTableShardingAlgorithm
#              allow-range-query-with-inline-sharding: true

    # 开启sql日志
    props:
      sql-show: true