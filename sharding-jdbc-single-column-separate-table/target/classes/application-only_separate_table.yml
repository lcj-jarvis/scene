# 配置根据equipmentNo的hashCode进行取模进行分表配置
spring:
  shardingsphere:
    #    开启sql日志
    props:
      sql-show: true
    datasource:
      names: ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://192.168.15.104:3306/sp_default?useUnicode=true&useSSL=false
        username: root
        password: root
        driver-class-name: com.mysql.cj.jdbc.Driver
        druid:
          initial-size: 5
          min-idle: 5
          max-active: 20
          max-wait: 60000
          time-between-eviction-runs-millis: 60000
          min-evictable-idle-time-millis: 300000
          validation-query: SELECT 1
          test-while-idle: true
          test-on-borrow: false
          test-on-return: false
          pool-prepared-statements: true
          max-pool-prepared-statement-per-connection-size: 20

    rules:
      sharding:
        tables:
          t_ns_common_monitoring_data:
            # 表名应为 t_ns_common_monitoring_data_1 到 t_ns_common_monitoring_data_10
            actual-data-nodes: ds0.t_ns_common_monitoring_data_${1..10}
            table-strategy:
              standard:
                # 选择 sharding 列为 equipment_no
                sharding-column: equipment_no
                sharding-algorithm-name: monitoring_data_inline
            key-generate-strategy:
              column: data_id
                # 分表data_id生成策略
              key-generator-name: id_key_generator
        sharding-algorithms:
          monitoring_data_inline:
            type: inline
            props:
              # 使用 hashCode 和取模实现分表，计算结果应在 1..10 之间
              algorithm-expression: t_ns_common_monitoring_data_${Math.abs(equipment_no.hashCode()) % 10 + 1}
        # 设置id使用雪花算法生成
        key-generators:
          id_key_generator:
            type: SNOWFLAKE
            props:
              worker-id: 1
              max-vibration-offset: 3

